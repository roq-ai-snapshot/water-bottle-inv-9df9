generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model business {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description  String?        @db.VarChar(255)
  address      String?        @db.VarChar(255)
  city         String?        @db.VarChar(255)
  state        String?        @db.VarChar(255)
  zip_code     String?        @db.VarChar(10)
  name         String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  user_id      String         @db.Uuid
  tenant_id    String         @db.VarChar(255)
  user         user           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory    inventory[]
  sales        sales[]
  supply_chain supply_chain[]
}

model customer {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name String   @db.VarChar(255)
  last_name  String   @db.VarChar(255)
  email      String   @unique @db.VarChar(255)
  address    String   @db.VarChar(255)
  city       String   @db.VarChar(255)
  state      String   @db.VarChar(255)
  zip_code   String   @db.VarChar(10)
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model inventory {
  id                String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_name      String         @db.VarChar(255)
  quantity          Int
  business_id       String         @db.Uuid
  last_restock_date DateTime?      @db.Timestamp(6)
  next_restock_date DateTime?      @db.Timestamp(6)
  created_at        DateTime       @default(now()) @db.Timestamp(6)
  updated_at        DateTime       @default(now()) @db.Timestamp(6)
  business          business       @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sales             sales[]
  supply_chain      supply_chain[]
}

model sales {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id    String    @db.Uuid
  quantity_sold Int
  sales_date    DateTime  @db.Timestamp(6)
  business_id   String    @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  business      business  @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory     inventory @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model supply_chain {
  id                     String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_id             String    @db.Uuid
  supplier_name          String    @db.VarChar(255)
  quantity_ordered       Int
  order_date             DateTime  @db.Timestamp(6)
  expected_delivery_date DateTime? @db.Timestamp(6)
  business_id            String    @db.Uuid
  created_at             DateTime  @default(now()) @db.Timestamp(6)
  updated_at             DateTime  @default(now()) @db.Timestamp(6)
  business               business  @relation(fields: [business_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory              inventory @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  business    business[]
  customer    customer[]
}
